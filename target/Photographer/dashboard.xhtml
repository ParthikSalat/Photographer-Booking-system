<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core">
<h:head>
    <title>Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background: linear-gradient(to right, #f9f9f9, #edf2f7);
            margin: 0;
            padding: 30px;
            color: #333;
        }

        .main-title {
            font-size: 28px;
            font-weight: 600;
            margin-bottom: 5px;
            color: #2c3e50;
        }

        .subtitle {
            font-size: 16px;
            color: #6c757d;
            margin-bottom: 30px;
        }

        .cards {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }

        .card {
            flex: 1 1 250px;
            background: #ffffff;
            border-radius: 16px;
            padding: 25px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            transition: transform 0.2s ease;
        }

        .card:hover {
            transform: translateY(-4px);
        }

        .card h4 {
            margin: 0 0 10px;
            font-size: 18px;
            font-weight: 600;
            color: #343a40;
        }

        .card p {
            font-size: 20px;
            font-weight: bold;
            color: #007bff;
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: #e9ecef;
            border-radius: 4px;
            margin-top: 10px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            border-radius: 4px;
            transition: width 0.4s ease;
        }

        .chart-section {
            display: flex;
            gap: 20px;
            margin-top: 30px;
            flex-wrap: wrap;
        }

        .chart-card {
            flex: 1 1 500px;
            background: #ffffff;
            border-radius: 16px;
            padding: 25px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }

        .chart-card h4 {
            margin-bottom: 20px;
            font-size: 18px;
            font-weight: 600;
            color: #343a40;
        }

        .chart-container {
            width: 100%;
            height: 250px;
        }

        @media screen and (max-width: 768px) {
            .cards,
            .chart-section {
                flex-direction: column;
            }
        }
    </style>
</h:head>

<h:body>
    <div class="main-title">Good morning!</div>
    <div class="subtitle">Here's what's going on with your business today.</div>

    <!-- Statistic Cards -->
    <div class="cards">
        <div class="card">
            <h4>Total Users</h4>
            <p><h:outputText value="#{userController.userCount}" /></p>
            <div class="progress-bar">
                <div class="progress-fill" style="width: 30%; background-color: #007bff;"></div>
            </div>
        </div>

        <div class="card">
            <h4>Total Photographers</h4>
            <p><h:outputText value="#{photographerController.photographerCount}" /></p>
            <div class="progress-bar">
                <div class="progress-fill" style="width: 60%; background-color: #28a745;"></div>
            </div>
        </div>

       <div class="card">
    <h4>Total Bookings</h4>
    <p><strong id="booking-count" style="color: #fd7e14;">Loading...</strong></p>
    <div class="progress-bar" style="background-color: #e9ecef; height: 20px; border-radius: 5px;">
        <div id="booking-progress" class="progress-fill" style="height: 100%; width: 0%; background-color: #fd7e14; border-radius: 5px;"></div>
    </div>
</div>
    </div>

    <!-- Charts Section -->
    <div class="chart-section">
        <div class="chart-card">
            <h4>Traffic Overview</h4>
            <div class="chart-container">
                <canvas id="trafficChart"></canvas>
            </div>
        </div>

        <div class="chart-card">
            <h4>Product Views</h4>
            <div class="chart-container">
                <canvas id="pieChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Chart Initialization -->
    <script>
        const trafficCtx = document.getElementById('trafficChart').getContext('2d');
        new Chart(trafficCtx, {
            type: 'line',
            data: {
                labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                datasets: [{
                    label: 'Visitors',
                    data: [120, 180, 300, 500, 200, 300],
                    fill: true,
                    borderColor: '#007bff',
                    backgroundColor: 'rgba(0, 123, 255, 0.2)',
                    tension: 0.4,
                    pointBackgroundColor: '#007bff'
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });

        const pieCtx = document.getElementById('pieChart').getContext('2d');
        new Chart(pieCtx, {
            type: 'doughnut',
            data: {
                labels: ['Studio Bookings', 'Outdoor Sessions', 'Event Coverage'],
                datasets: [{
                    data: [40, 25, 35],
                    backgroundColor: ['#007bff', '#28a745', '#ffc107']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            usePointStyle: true,
                            boxWidth: 10
                        }
                    }
                }
            }
        });
         fetch("http://localhost:8080/Photographer/api/bookings/count")
        .then(response => response.json())
        .then(data => {
            const count = data.count || 0;
            const percent = Math.min((count / 100) * 100, 100); // Assume max is 100

            document.getElementById("booking-count").textContent = count + " Bookings";
            document.getElementById("booking-progress").style.width = percent + "%";
        })
        .catch(error => {
            console.error("Failed to load booking count:", error);
            document.getElementById("booking-count").textContent = "Error";
        });
    </script>
</h:body>
</html>
